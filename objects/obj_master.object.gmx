<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>totalPlayers = 0;
global.currentPlayer = 0;
global.currentTeam = 0;
global.endTurn=false;




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.numberOfTeams=2;

numberOfBluePlayers = 1;
numberOfRedPlayers = 2;

startingPositonBlueX = 384;
startingPositonBlueY = 0;

startingPositonRedX = 0;
startingPositonRedY = 128;

//Grid: |table_id|group_name|player_count|
playerGroupsGrid = ds_grid_create(3, 2);
ds_grid_set(playerGroupsGrid, 0, 0, 0);
ds_grid_set(playerGroupsGrid, 1, 0, "Blue Team");
ds_grid_set(playerGroupsGrid, 2, 0, numberOfBluePlayers);
ds_grid_set(playerGroupsGrid, 0, 1, 1);
ds_grid_set(playerGroupsGrid, 1, 1, "Red Team");
ds_grid_set(playerGroupsGrid, 2, 1, numberOfRedPlayers);
//show_message( ds_grid_get(playerGroupsGrid, 1, 2) );




playerBlueGrid = ds_grid_create(3,numberOfBluePlayers);

for(i = 0; i &lt; numberOfBluePlayers; i += 1)
{
    totalPlayers += 1;
    startingPositonBlueY -= (64 * i);
    
    //CREATE the instance and assign some initial variables
    var playerBlueId = instance_create(startingPositonBlueX,startingPositonBlueY,obj_blue);
    playerBlueId.thisPlayerId = i;
    playerBlueId.thisTeamId = 0;
    playerBlueId.name = "Blue Player " + string(i+1);

    //NEW GRID: |instance_id|player_name|alive|
    ds_grid_set(playerBlueGrid, 0, i, playerBlueId);
    ds_grid_set(playerBlueGrid, 1, i, playerBlueId.name);
    ds_grid_set(playerBlueGrid, 2, i, true);
}
//show_message("Alive: " + string( ds_grid_get(playerBlueGrid, 2, 0) ) );

//Grid: |instance_id|player_name|
playerRedGrid = ds_grid_create(3,numberOfRedPlayers);
for(j=0; j &lt; numberOfRedPlayers; j += 1)
{
    totalPlayers += 1;
    startingPositonRedY += (384 * j);
    
    //CREATE the instance and assign some initial variables
    var playerRedId = instance_create(startingPositonRedX,startingPositonRedY,obj_red);
    playerRedId.thisPlayerId = j;
    playerRedId.thisTeamId = 1;
    playerRedId.name = "Red Player " + string(j+1)

    //NEW GRID: |instance_id|player_name|alive|
    ds_grid_set(playerRedGrid, 0, j, playerRedId);
    ds_grid_set(playerRedGrid, 1, j, playerRedId.name);
    ds_grid_set(playerRedGrid, 2, j, true);

}

teamGrids = ds_grid_create(2,global.numberOfTeams);
ds_grid_set(teamGrids, 0, 0, 0);
ds_grid_set(teamGrids, 1, 0, playerBlueGrid);
ds_grid_set(teamGrids, 0, 1, 0);
ds_grid_set(teamGrids, 1, 1, playerRedGrid);

playerYellowBorderId = instance_create(startingPositonBlueX,startingPositonBlueY,obj_yellow_border);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.endTurn == true )
{
    show_message("End Turn button pressed");
    global.endTurn=false;
       
    gridCurrentTeam = ds_grid_get(obj_master.teamGrids, 1, global.currentTeam);
    currentPlayerId = ds_grid_get(gridCurrentTeam, 0, global.currentPlayer);
    
    currentPlayerId.actionPoints = currentPlayerId.totalActionPoints;
    
    var gridHeight = ds_grid_height(gridCurrentTeam);
    
    /*
    show_message("currentTeam: "+ string(global.currentTeam)+
                 "#currentPlayer: "+ string(global.currentPlayer)+
                 "#Number of Players in Team: " + string(gridHeight)
    );
    */
    
    
    if ( global.currentPlayer &lt; ds_grid_height(gridCurrentTeam)-1 )
    {
        show_message("Go to next player on this team");
        //gridCurrentPlayer = ds_grid_get(gridCurrentTeam, 0, global.currentPlayer);
        global.currentPlayer += 1;
        isNextPlayerAlive = ds_grid_get(gridCurrentTeam, 2, global.currentPlayer);
        //show_message("Is next player on team alive?: " + string(isNextPlayerAlive));
        if (!isNextPlayerAlive) {
            show_message("Next player is dead, skip him.");
            global.currentPlayer += 1;
            if ( global.currentPlayer = ds_grid_height(gridCurrentTeam) ) script_turn_next_team();
        }
        
    }
    else
    {
        script_turn_next_team();
    }
    
}

var gridCurrentTeamYellowBorder = ds_grid_get(obj_master.teamGrids, 1, global.currentTeam);
var gridPlayerIdYellowBorder  = ds_grid_get(gridCurrentTeamYellowBorder, 0, global.currentPlayer);
playerYellowBorderId.x = gridPlayerIdYellowBorder.x;
playerYellowBorderId.y = gridPlayerIdYellowBorder.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

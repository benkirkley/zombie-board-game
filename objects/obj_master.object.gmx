<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>totalPlayers = 0;
global.currentPlayer = 0;
global.currentTeam = 0;
global.endTurn=false;




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.numberOfTeams=2;

numberOfBluePlayers = 1;
numberOfRedPlayers = 2;

startingPositonBlueX = 192;
startingPositonBlueY = 256;

startingPositonRedX = 64;
startingPositonRedY = 256;

//Grid: |table_id|group_name|player_count|
playerGroupsGrid = ds_grid_create(3, 2);
ds_grid_set(playerGroupsGrid, 0, 0, 0);
ds_grid_set(playerGroupsGrid, 1, 0, "Blue Team");
ds_grid_set(playerGroupsGrid, 2, 0, numberOfBluePlayers);
ds_grid_set(playerGroupsGrid, 0, 1, 1);
ds_grid_set(playerGroupsGrid, 1, 1, "Red Team");
ds_grid_set(playerGroupsGrid, 2, 1, numberOfRedPlayers);
//show_message( ds_grid_get(playerGroupsGrid, 1, 2) );



//Grid: |instance_id|player_name|
playerBlueGrid = ds_grid_create(2,numberOfBluePlayers);

for(i = 0; i &lt; numberOfBluePlayers; i += 1)
{
    startingPositonBlueY -= (64 * i);
    var playerBlueId = instance_create(startingPositonBlueX,startingPositonBlueY,obj_blue);
    
    totalPlayers += 1;
    allPlayers[i,0] = playerBlueId;
    allPlayers[i,1] = "Blue Player";
    
    ds_grid_set(playerBlueGrid, 0, i, playerBlueId);
    ds_grid_set(playerBlueGrid, 1, i, "Blue Player");
}
//show_message("height: " + string(ds_grid_height(playerBlueGrid)));

//Grid: |instance_id|player_name|
playerRedGrid = ds_grid_create(2,numberOfRedPlayers);
for(j=0; j &lt; numberOfRedPlayers; j += 1)
{
    startingPositonRedY -= (64 * i);
    var playerRedId = instance_create(startingPositonRedX,startingPositonRedY,obj_red);
    
    totalPlayers += 1;
    allPlayers[i+j,0] = playerRedId;
    allPlayers[i+j,1] = "Red Player " + string(j+1);
    
    ds_grid_set(playerRedGrid, 0, j, playerRedId);
    ds_grid_set(playerRedGrid, 1, j, "Red Player " + string(j+1));
    //show_message( ds_grid_get(playerRedGrid, j, 1) );

}

teamGrids = ds_grid_create(2,global.numberOfTeams);
ds_grid_set(teamGrids, 0, 0, 0);
ds_grid_set(teamGrids, 1, 0, playerBlueGrid);
ds_grid_set(teamGrids, 0, 1, 0);
ds_grid_set(teamGrids, 1, 1, playerRedGrid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.endTurn == true ){

    global.endTurn=false;
       
    gridCurrentTeam = ds_grid_get(obj_master.teamGrids, 1, global.currentTeam);
    currentPlayerId = ds_grid_get(gridCurrentTeam, 0, global.currentPlayer);
    
    currentPlayerId.actionPoints = currentPlayerId.totalActionPoints;
    
    var gridHeight = ds_grid_height(gridCurrentTeam);
    /*
    show_message("currentTeam: "+ string(global.currentTeam)+
                 "#currentPlayer: "+ string(global.currentPlayer)
    );
    */
    
    if ( global.currentPlayer &lt; ds_grid_height(gridCurrentTeam)-1 )
    {
        gridCurrentPlayer = ds_grid_get(gridCurrentTeam, 0, global.currentPlayer);
        global.currentPlayer += 1;
    }
    else
    {
        //show_message("No more players on team");
        global.currentPlayer = 0;
        global.currentTeam += 1;
        if ( global.currentTeam &gt;= global.numberOfTeams ) global.currentTeam = 0 ;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
